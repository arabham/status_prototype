def parseLog():
 
        #loglines.reverse()

    with open ('screen.miner.log', 'r') as screenminerlog:
        for logline in screenminerlog:
            loglines.append(logline)
            print(str(loglines))

    for num, lines in enumerate(loglines):
        if(loglines[num][0] == 'G'):
            print('RIGHT!')
            print(loglines[num])
            break


			def vlan2Scan():
    lock=threading.Lock()
    _start=time.time()
    def check(n):
        with open(os.devnull, "wb") as limbo:
                ip="192.168.2.{0}".format(n)
                result=subprocess.Popen(["ping", "-n", "1", "-w", "300", ip],stdout=limbo, stderr=limbo).wait()
                with lock:                    
                    if not result:
                        active.append(ip)
                        print (ip, "active")                    
                    else:
                        #print (ip, "inactive") 
                        pass                        

    def threader():
        while True:
            worker=q.get()
            check(worker)
            q.task_done()
    q=Queue()

    for x in range(255):
        t=threading.Thread(target=threader)
        t.daemon=True
        t.start()
    for worker in range(1,255):
        q.put(worker)
    q.join()
    print("Process completed in: ",time.time()-_start)

def vlan3Scan():
    lock=threading.Lock()
    _start=time.time()
    def check(n):
        with open(os.devnull, "wb") as limbo:
                ip="192.168.3.{0}".format(n)
                result=subprocess.Popen(["ping", "-n", "1", "-w", "300", ip],stdout=limbo, stderr=limbo).wait()
                with lock:                    
                    if not result:
                        active.append(ip)
                        print (ip, "active")                    
                    else:
                        #print (ip, "inactive") 
                        pass                        

    def threader():
        while True:
            worker=q.get()
            check(worker)
            q.task_done()
    q=Queue()

    for x in range(255):
        t=threading.Thread(target=threader)
        t.daemon=True
        t.start()
    for worker in range(1,255):
        q.put(worker)
    q.join()
    print("Process completed in: ",time.time()-_start)

def vlan4Scan():
    lock=threading.Lock()
    _start=time.time()
    def check(n):
        with open(os.devnull, "wb") as limbo:
                ip="192.168.4.{0}".format(n)
                result=subprocess.Popen(["ping", "-n", "1", "-w", "300", ip],stdout=limbo, stderr=limbo).wait()
                with lock:                    
                    if not result:
                        active.append(ip)
                        print (ip, "active")                    
                    else:
                        #print (ip, "inactive") 
                        pass                        

    def threader():
        while True:
            worker=q.get()
            check(worker)
            q.task_done()
    q=Queue()

    for x in range(255):
        t=threading.Thread(target=threader)
        t.daemon=True
        t.start()
    for worker in range(1,255):
        q.put(worker)
    q.join()
    print("Process completed in: ",time.time()-_start)

def vlan5Scan():
    lock=threading.Lock()
    _start=time.time()
    def check(n):
        with open(os.devnull, "wb") as limbo:
                ip="192.168.5.{0}".format(n)
                result=subprocess.Popen(["ping", "-n", "1", "-w", "300", ip],stdout=limbo, stderr=limbo).wait()
                with lock:                    
                    if not result:
                        active.append(ip)
                        print (ip, "active")                    
                    else:
                        #print (ip, "inactive") 
                        pass                        

    def threader():
        while True:
            worker=q.get()
            check(worker)
            q.task_done()
    q=Queue()

    for x in range(255):
        t=threading.Thread(target=threader)
        t.daemon=True
        t.start()
    for worker in range(1,255):
        q.put(worker)
    q.join()
    print("Process completed in: ",time.time()-_start)

def vlan6Scan():
    lock=threading.Lock()
    _start=time.time()
    def check(n):
        with open(os.devnull, "wb") as limbo:
                ip="192.168.6.{0}".format(n)
                result=subprocess.Popen(["ping", "-n", "1", "-w", "300", ip],stdout=limbo, stderr=limbo).wait()
                with lock:                    
                    if not result:
                        active.append(ip)
                        print (ip, "active")                    
                    else:
                        #print (ip, "inactive") 
                        pass                        

    def threader():
        while True:
            worker=q.get()
            check(worker)
            q.task_done()
    q=Queue()

    for x in range(255):
        t=threading.Thread(target=threader)
        t.daemon=True
        t.start()
    for worker in range(1,255):
        q.put(worker)
    q.join()
    print("Process completed in: ",time.time()-_start)

def vlan7Scan():
    lock=threading.Lock()
    _start=time.time()
    def check(n):
        with open(os.devnull, "wb") as limbo:
                ip="192.168.7.{0}".format(n)
                result=subprocess.Popen(["ping", "-n", "1", "-w", "300", ip],stdout=limbo, stderr=limbo).wait()
                with lock:                    
                    if not result:
                        active.append(ip)
                        print (ip, "active")                    
                    else:
                        #print (ip, "inactive") 
                        pass                        

    def threader():
        while True:
            worker=q.get()
            check(worker)
            q.task_done()
    q=Queue()

    for x in range(255):
        t=threading.Thread(target=threader)
        t.daemon=True
        t.start()
    for worker in range(1,255):
        q.put(worker)
    q.join()
    print("Process completed in: ",time.time()-_start)

def vlan8Scan():
    lock=threading.Lock()
    _start=time.time()
    def check(n):
        with open(os.devnull, "wb") as limbo:
                ip="192.168.8.{0}".format(n)
                result=subprocess.Popen(["ping", "-n", "1", "-w", "300", ip],stdout=limbo, stderr=limbo).wait()
                with lock:                    
                    if not result:
                        active.append(ip)
                        print (ip, "active")                    
                    else:
                        #print (ip, "inactive") 
                        pass                        


						def threader():
	while True:
		worker=q.get()
		check(worker)
		q.task_done()
    q=Queue()

    for x in range(255):
        t=threading.Thread(target=threader)
        t.daemon=True
        t.start()
    for worker in range(1,255):
        q.put(worker)
    q.join()
    print("Process completed in: ",time.time()-_start)
